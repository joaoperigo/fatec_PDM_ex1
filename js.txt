class Jogo extends React.Component {
  render() {
    return (
      <div className="jogo">
        <div className="jogo-tabuleiro">
          <Tabuleiro
            quadrados={Array(9)
              .fill()
              .map((value, pos) => pos)}
          />
        </div>
        <div className="jogo-info">
          <ol>{"Movimentos"}</ol>
        </div>
      </div>
    );
  }
}

class Tabuleiro extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      quadrados: Array(9).fill(null),
      xIsNext: true
    };
  }
  handleClick(i) {
    const quadrados = this.state.quadrados.slice();

    //console.log(quadrados);
    
    let resultado = calculateWinner(quadrados);
    
    if (resultado) {
      alert("Jogo acabou. Vencedor: " + resultado);
      return;
    }
    if (quadrados[i]) {
      alert("Quadrado ocupado!");
      return;
    }
    quadrados[i] = this.state.xIsNext ? "X" : "O";
    this.setState({ quadrados: quadrados, xIsNext: !this.state.xIsNext });
  }
randomMove() {
    const quadrados = this.state.quadrados.slice();
    const posicoesSemValor = [];

    quadrados.forEach((valor, posicao) => {
      if(!valor)
        posicoesSemValor.push(posicao); 
    });
        
    if(calculateWinner(quadrados) || !posicoesSemValor.length) {
      alert('Jogo j√° acabou')
      return;
    }
    
    const posicaoAleatoria = posicoesSemValor[parseInt(Math.random() * posicoesSemValor.length)];
    
    quadrados[posicaoAleatoria] = this.state.xIsNext ? 'X' : 'O';
    
    this.setState({quadrados: quadrados, xIsNext: !this.state.xIsNext}); 
  }
  
  resetGame() {
    this.setState({quadrados: Array(9).fill(null), xIsNext: true})
  }
  render() {
     const vencedor = calculateWinner(this.state.quadrados);
    
     const status = vencedor ? ('Vencedor: ' + vencedor) : ('Jogador: ' + (this.state.xIsNext ? 'X' : 'O'));
    
    return (
      <div>
        <div className="linha-tabuleiro">
          {this.renderizarQuadrado(0)}
          {this.renderizarQuadrado(1)}
          {this.renderizarQuadrado(2)}
        </div>
        <div className="linha-tabuleiro">
          {this.renderizarQuadrado(3)}
          {this.renderizarQuadrado(4)}
          {this.renderizarQuadrado(5)}
        </div>
        <div className="linha-tabuleiro">
          {this.renderizarQuadrado(6)}
          {this.renderizarQuadrado(7)}
          {this.renderizarQuadrado(8)}
        </div>
        <div className="actions">
          <button onClick={() => this.resetGame()}>Reset</button>
          <button onClick={() => this.randomMove()}>Random</button>
         </div>
      </div>
    );
  }

  renderizarQuadrado(i) {
    return (
      <Quadrado
        value={this.state.quadrados[i]}
        onClick={() => {
          this.handleClick(i);
        }}
        pos={i}
      />
    );
  }
}

function calculateWinner(squares) {
  const lines = [
    [0, 1, 2],
    [3, 4, 5],
    [6, 7, 8],
    [0, 3, 6],
    [1, 4, 7],
    [2, 5, 8],
    [0, 4, 8],
    [2, 4, 6]
  ];
  for (let i = 0; i < lines.length; i++) {
    const [a, b, c] = lines[i];
    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c])
      return squares[a];
  }
  return null;
}

class Quadrado extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      value: null
    };
  }

  render() {
    return (
      <button
        className="quadrado"
        onClick={() => {
          this.props.onClick();
        }}
      >
        {this.props.value}
      </button>
    );
  }
}

ReactDOM.render(<Jogo />, document.getElementById("root"));

/*ReactDOM.render(
  <Tabuleiro
    quadrados={Array(9)
      .fill()
      .map((value, pos) => pos)}
  />,
  document.getElementById("root")
);*/

/*ReactDOM.render(
  <Quadrado
    onClick={() => {
      alert("Clicou");
    }}
    value={2 + 2}
  />,
  document.getElementById("root")
);*/

/*function Quadrado(props) {
  return (
    <button className="quadrado" onClick={props.onClick}>
      {props.value}
    </button>
  );
}*/
